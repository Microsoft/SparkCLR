version: 1.6.0-SNAPSHOT.{build}

environment:
  securefile:          
    secure: Ytj1W9EwvU5JP+PlFUQ7CSing7qenLuDgUNbniX8BAY=
  ossrh-user:          
    secure: T9zNd6DB0T6PXfUfxo5W2w==
  ossrh-pass:          
    secure: 39ewTowxhIB09wMhP1rU+SJ6MahjvGTlJTO/VH+v8/M=
  gpg-pass:          
    secure: t8UyjbNBnWJLrl8XFS/MbQ==

install:
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (set ProjectVersion=%APPVEYOR_REPO_TAG_NAME:~1%)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (nuget install secure-file -ExcludeVersion)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (secure-file\tools\secure-file -decrypt build\data\private_token.asc.enc -secret %securefile% -out build\data\private_token.asc)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (secure-file\tools\secure-file -decrypt build\data\public_token.asc.enc -secret %securefile% -out build\data\public_token.asc)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (secure-file\tools\secure-file -decrypt build\data\ownertrustblob.txt.enc -secret %securefile% -out  build\data\ownertrustblob.txt)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (if not exist "%USERPROFILE%\.m2" mkdir %USERPROFILE%\.m2)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (powershell -NoProfile -ExecutionPolicy Bypass -Command "((Get-Content build\data\settings.xml) -replace '{user}', '%ossrh-user%' -replace '{pass}', '%ossrh-pass%' -replace '{passphrase}', '%gpg-pass%') | Set-Content %USERPROFILE%\.m2\settings.xml -force")

#build C# solution and scala project
build_script:
  - cmd: echo [build_script] ProjectVersion=%ProjectVersion%
  - cmd: echo appveyor environment BUILD_NUMBER=[%APPVEYOR_BUILD_NUMBER%] BUILD_VERSION=[%APPVEYOR_BUILD_VERSION%] REPO_TAG=[%APPVEYOR_REPO_TAG%] REPO_TAG_NAME=[%APPVEYOR_REPO_TAG_NAME%] APPVEYOR=[%APPVEYOR%] CI=[%CI%]
  - cmd: SET MAVEN_OPTS=-XX:MaxPermSize=2g -Xmx4g
  - cmd: SET JAVA_OPTS=-XX:MaxPermSize=2g -Xmx4g
  - cmd: SET MVN_QUIET=--quiet
  - cmd: cd .\build
  - cmd: .\Build.cmd
  - cmd: cd ..
  - cmd: dir .\build\target\*.zip

test: off

artifacts:          
  - path: '**\Microsoft*.nupkg'                 # find all NuGet packages recursively
  - path: 'scala\target\spark-clr*.jar'
  - path: 'build\target\spark-clr*.zip'

deploy:
  - provider: NuGet                             # test-deploy to MyGet.org
    server: https://www.myget.org/F/sparkclr-test/api/v2/package
    api_key:                                    
      secure: jOd8BzOgT0GHLX85JBU2o6WrvLpSHSkqQNy0e4naNWHyJNuYENXkON1flW+4whEW
    skip_symbols: false
    symbol_server: https://www.myget.org/F/sparkclr-test/api/v2/package
    artifact: /Microsoft.*\.nupkg/
